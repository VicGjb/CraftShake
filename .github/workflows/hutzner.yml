name: Deploy to ECR

on:
 
  push:
    branches: [ main ]

jobs:
  
  build:
    
    name: Build Image
    runs-on: ubuntu-latest

   
    steps:

    - name: Check out code
      uses: actions/checkout@v2
    


    - name: Login to DockerHub
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      run: echo ${DOCKER_PASSWORD} | docker login --username ${DOCKER_USERNAME} --password-stdin

    # - name: Configure AWS credentials
    #   uses: aws-actions/configure-aws-credentials@v1
    #   with:
    #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #     aws-region: eu-central-1

    # - name: Login to Amazon ECR

    #   id: login-ecr
    #   uses: aws-actions/amazon-ecr-login@v1
      

    # - name: Build, tag, and push image to Amazon ECR
    #   env:
    #     ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
    #     ECR_BACKEND_REPOSITORY:  craftshake-backend
    #     ECR_FRONTEND_REPOSITORY:  craftshake-frontend 
    #   run: |
    #     cd Cocktails/ 
    #     docker build -t ${{ steps.login-ecr.outputs.registry }}/craftshake-backend:latest .
    #     docker push ${{ steps.login-ecr.outputs.registry }}/craftshake-backend:latest
    #     cd ../frontend/ 
    #     docker build -t ${{ steps.login-ecr.outputs.registry }}/craftshake-frontend:latest .
    #     docker push ${{ steps.login-ecr.outputs.registry }}/craftshake-frontend:latest

    # - name: Create .env file
    #   run: echo ${{ secrets.ENV_FILE }} > .env
    
    # - name: Pull on EC2 backend
    #   uses: appleboy/ssh-action@v0.1.7
    #   env:
    #     ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
    #     ECR_BACKEND_REPOSITORY:  craftshake-backend
    #   with:
    #     host: ${{ secrets.EC2_BACKEND_HOST }}
    #     username: ${{ secrets.EC2_USERNAME }}
    #     key: ${{ secrets.EC2_BACKEND_PRIVATE_KEY }}
    #     script: |
    #       if docker ps -a --filter "name=craftshake-backend" --format '{{.Names}}' | grep -q "craftshake-backend"; then
    #          docker stop craftshake-backend
    #          docker rm craftshake-backend
    #       fi
    #       docker pull ${{ steps.login-ecr.outputs.registry }}/craftshake-backend:latest
    #       docker run --detach --name craftshake-backend -p 8000:8000 --env-file=.env  ${{ steps.login-ecr.outputs.registry }}/craftshake-backend:latest
          

    # - name: Pull on EC2 frontend
    #   uses: appleboy/ssh-action@v0.1.7
    #   env:
    #     ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
    #     ECR_BACKEND_REPOSITORY:  craftshake-frontend
    #   with:
    #     host: ${{ secrets.EC2_FRONTEND_HOST }}
    #     username: ${{ secrets.EC2_USERNAME }}
    #     key: ${{ secrets.EC2_FRONTEND_PRIVATE_KEY }}
    #     script: |
    #       if docker ps -a --filter "name=craftshake-frontend" --format '{{.Names}}' | grep -q "craftshake-frontend"; then
    #          docker stop craftshake-frontend
    #          docker rm craftshake-frontend
    #       fi
    #       docker pull ${{ steps.login-ecr.outputs.registry }}/craftshake-frontend:latest
    #       docker run --detach --name craftshake-frontend -p 3000:3000 ${{ steps.login-ecr.outputs.registry }}/craftshake-frontend:latest